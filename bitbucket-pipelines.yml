# This is a sample build configuration for Docker.
# Check our guides at https://confluence.atlassian.com/x/O1toN for more examples.
# Only use spaces to indent your .yml configuration.
# -----
# You can specify a custom docker image from Docker Hub as your build environment.

options:
  docker: true


pipelines:
  default:
    - step:
        name: Build Docker Image
        image: atlassian/default-image:2
        services:
          - docker
        script: # Modify the commands below to build your repository.
          # Set $DOCKER_HUB_USERNAME and $DOCKER_HUB_PASSWORD as environment variables in repository settings
          - export IMAGE_NAME=gcr.io/$GCLOUD_PROJECT/search:$BITBUCKET_COMMIT

          # build the Docker image (this will use the Dockerfile in the root of the repo)
          - docker build -t $IMAGE_NAME .
          - docker save --output tmp-image.docker $IMAGE_NAME
        artifacts:
          - tmp-image.docker
    - step:
        name: Push to GCP registry
        image: google/cloud-sdk:latest
        script:
          - export IMAGE_NAME=gcr.io/$GCLOUD_PROJECT/worker:$BITBUCKET_COMMIT
          - docker load --input ./tmp-image.docker             
          # Authenticating with the service account key file
          - echo $GCLOUD_PROJECT
          - echo $GCLOUD_API_KEY
          - echo "$GCLOUD_API_KEY" | base64 -d > ./gcloud-api-key.json
          - gcloud auth activate-service-account --key-file gcloud-api-key.json
          - gcloud config set project $GCLOUD_PROJECT
          # push the new Docker image to the Docker registry
          # Login to google docker hub
          - cat ./gcloud-api-key.json | docker login -u _json_key --password-stdin https://gcr.io &&  docker push $IMAGE_NAME
    - stop:
        name: Deploy to app engine
        image: google/cloud-sdk:latest
        script:
          - echo "$GCLOUD_API_MANTISER_DEPLOY_KEY" | base64 -d > ./gcloud-api-key.json
          - gcloud auth activate-service-account --key-file gcloud-api-key.json
          - gcloud config set project mantiser-com
          - gcloud app  deploy -q

